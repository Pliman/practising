;;; TOOL: run-wasm-link
;;; FLAGS: --incremental -r
(module
  (import "__extern" "bar" (func (param i32) (result i32)))
  (func (param i32)
     get_local 0
     call 0
     call 1)
)
(module
  (import "__extern" "does_nothing" (func (param f64)))
  (func (param i64)
     f64.const 1
     call 0
     i64.const 10
     call 1)
)
(module
  (import "__extern" "hello_world" (func (param f32)))
  (func (param i32)
     f32.const 1
     call 0
     i32.const 10
     call 1)
)
(;; STDOUT ;;;

linked.wasm:	file format wasm 0x1

Sections:

     Type start=0x0000000a end=0x00000024 (size=0x0000001a) count: 6
   Import start=0x0000002a end=0x00000069 (size=0x0000003f) count: 3
 Function start=0x0000006f end=0x00000073 (size=0x00000004) count: 3
     Code start=0x00000075 end=0x000000b7 (size=0x00000042) count: 3
   Custom start=0x000000bd end=0x000000dc (size=0x0000001f) "reloc.Code"

Section Details:

Type:
 - type[0] (i32) -> i32
 - type[1] (i32) -> nil
 - type[2] (f64) -> nil
 - type[3] (i64) -> nil
 - type[4] (f32) -> nil
 - type[5] (i32) -> nil
Import:
 - func[0] sig=0 <- __extern.bar
 - func[1] sig=2 <- __extern.does_nothing
 - func[2] sig=4 <- __extern.hello_world
Function:
 - func[3] sig=1
 - func[4] sig=3
 - func[5] sig=5
Custom:
 - name: "reloc.Code"
  - section: Code
   - R_FUNC_INDEX_LEB   offset=0x000006(file=0x00007b) index=0
   - R_FUNC_INDEX_LEB   offset=0x00000c(file=0x000081) index=3
   - R_FUNC_INDEX_LEB   offset=0x00001e(file=0x000093) index=1
   - R_FUNC_INDEX_LEB   offset=0x000026(file=0x00009b) index=4
   - R_FUNC_INDEX_LEB   offset=0x000034(file=0x0000a9) index=2
   - R_FUNC_INDEX_LEB   offset=0x00003c(file=0x0000b1) index=5

Code Disassembly:

000076 func[3]:
 000078: 20 00                      | get_local 0
 00007a: 10 80 80 80 80 00          | call 0
           00007b: R_FUNC_INDEX_LEB   0
 000080: 10 83 80 80 80 00          | call 3
           000081: R_FUNC_INDEX_LEB   3
 000086: 0b                         | end
000087 func[4]:
 000089: 44 00 00 00 00 00 00 f0 3f | f64.const 0x1p+0
 000092: 10 81 80 80 80 00          | call 1
           000093: R_FUNC_INDEX_LEB   1
 000098: 42 0a                      | i64.const 10
 00009a: 10 84 80 80 80 00          | call 4
           00009b: R_FUNC_INDEX_LEB   4
 0000a0: 0b                         | end
0000a1 func[5]:
 0000a3: 43 00 00 80 3f             | f32.const 0x1p+0
 0000a8: 10 82 80 80 80 00          | call 2
           0000a9: R_FUNC_INDEX_LEB   2
 0000ae: 41 0a                      | i32.const 10
 0000b0: 10 85 80 80 80 00          | call 5
           0000b1: R_FUNC_INDEX_LEB   5
 0000b6: 0b                         | end
;;; STDOUT ;;)
