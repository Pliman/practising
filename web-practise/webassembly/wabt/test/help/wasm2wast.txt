;;; EXE: %(wasm2wast)s
;;; FLAGS: --help
(;; STDOUT ;;;
usage: wasm2wast [options] filename

  read a file in the wasm binary format, and convert it to the wasm
  s-expression file format.

examples:
  # parse binary file test.wasm and write s-expression file test.wast
  $ wasm2wast test.wasm -o test.wast

  # parse test.wasm, write test.wast, but ignore the debug names, if any
  $ wasm2wast test.wasm --no-debug-names -o test.wast

options:
  -v, --verbose                  Use multiple times for more info
  -h, --help                     Print this help message
  -o, --output=FILENAME          Output file for the generated wast file, by default use stdout
  -f, --fold-exprs               Write folded expressions where possible
      --future-exceptions        Test future extension for exception handling
      --inline-exports           Write all exports inline
      --no-debug-names           Ignore debug names in the binary file
      --generate-names           Give auto-generated names to non-named functions, types, etc.
      --no-check                 Don't check for invalid modules
;;; STDOUT ;;)
